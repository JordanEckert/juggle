% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PCCCD.R
\name{modified_classify_pcccd}
\alias{modified_classify_pcccd}
\title{Modified Pure and Proper Class Cover Catch Digraph Prediction Rule}
\usage{
modified_classify_pcccd(pcccd, newdata, type = "pred", e = 0)
}
\arguments{
\item{pcccd}{a \code{pcccd_classifier} object}

\item{newdata}{newdata as matrix or dataframe.}

\item{type}{"pred" or "prob". Default is "pred". "pred" is class estimations,
"prob" is \eqn{n\times k} matrix of class probabilities.}

\item{e}{value between 0 and 1 that determines the effect of the cardinality of the neighbors on classification.
When \code{e = 0}, the prediction is same as original PCCCD, when \code{e = 1}, cardinality is fully incorporated.
Default is 0.}
}
\value{
a vector of class predictions (if type is "pred") or a \eqn{n\times p}
matrix of class probabilities (if type is "prob").
}
\description{
\code{modified_classify_pcccd} makes prediction using \code{pcccd_classifier} object.
We use \eqn{\rho = (\frac{d(x,z)}{r(x)})^{|N(x)|^e} } as a dissimlarity metric where \eqn{e} acts
as a hyperparameter for the effect of cardinality of the neighbors on classification.
}
\examples{
n <- 1000
x1 <- runif(n, 1, 10)
x2 <- runif(n, 1, 10)
x <- cbind(x1, x2)
y <- as.factor(ifelse(3 < x1 & x1 < 7 & 3 < x2 & x2 < 7, "A", "B"))

# testing the performance
i_train <- sample(1:n, round(n*0.8))

x_train <- x[i_train,]
y_train <- y[i_train]

x_test <- x[-i_train,]
y_test <- y[-i_train]

m_pcccd <- pcccd(x = x_train, y = y_train)
pred <- modified_classify_pcccd(pcccd = m_pcccd, newdata = x_test, e = 1)

# confusion matrix
table(y_test, pred)

# test accuracy
sum(y_test == pred)/nrow(x_test)

}
\author{
Jordan Eckert
}
